---- HAL_UART_Receive_DMA Matches (7 in 3 files) ----
Ble_nus51422.c (z:\documents\coding\stm32cube_fw_f4_v1.3.0\drivers\bsp\components\ble_nus51422):52:	if(HAL_UART_Receive_DMA(&huart1, (uint8_t *)aRxBuffer1, 2) != HAL_OK)
Ble_nus51422.c (z:\documents\coding\stm32cube_fw_f4_v1.3.0\drivers\bsp\components\ble_nus51422):273:	if(HAL_UART_Receive_DMA(&huart1, (uint8_t *)aRxBuffer, RXBUFFERSIZE) != HAL_OK)
Stm32f4xx_hal_uart.c (z:\documents\coding\stm32cube_fw_f4_v1.3.0\drivers\stm32f4xx_hal_driver\src):34:             and HAL_UART_Receive_DMA() APIs):
Stm32f4xx_hal_uart.c (z:\documents\coding\stm32cube_fw_f4_v1.3.0\drivers\stm32f4xx_hal_driver\src):102:       (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA() 
Stm32f4xx_hal_uart.c (z:\documents\coding\stm32cube_fw_f4_v1.3.0\drivers\stm32f4xx_hal_driver\src):546:        (++) HAL_UART_Receive_DMA()
Stm32f4xx_hal_uart.c (z:\documents\coding\stm32cube_fw_f4_v1.3.0\drivers\stm32f4xx_hal_driver\src):948:HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
Stm32f4xx_hal_uart.h (z:\documents\coding\stm32cube_fw_f4_v1.3.0\drivers\stm32f4xx_hal_driver\inc):573:HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size);
